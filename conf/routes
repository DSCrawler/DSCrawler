# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           	controllers.Application.index()
GET		/runExperiment					controllers.Application.runExperiment()

GET		/salesforceAccount				controllers.DataView.salesforceAccount(salesforceAccountId : Long)

GET 	/urlCleanupForm					controllers.Application.urlCleanupForm()
POST	/urlCleanupStart				controllers.Application.urlCleanupStart()
GET		/allSyncs						controllers.Application.allSyncs()
GET		/sitesDashboard					controllers.Application.sitesDashboard()
GET		/syncList						controllers.Application.syncList(syncType : String)
GET		/generateSyncReport				controllers.Application.generateSyncReport(syncId : Long)
POST	/runSalesforceSync				controllers.Application.runSalesforceSync()
GET		/salesforceWebsiteReport		controllers.Application.salesforceWebsiteReport()
GET		/assignSiteless					controllers.Application.assignSiteless()
GET		/salesforce/resetSites			controllers.Application.resetSites()
GET		/salesforce/forwardSites		controllers.Application.forwardSites()
POST	/salesforce/siteMismatchSubmit	controllers.SalesforceController.siteMismatchSubmit()
GET		/salesforce/siteMismatchForms	controllers.SalesforceController.siteMismatchForms(siteId : Long)
GET		/assignChangedWebsites			controllers.Application.assignChangedWebsites(syncId : Long)
GET		/viewSync						controllers.Application.viewSync(syncId : Long)

GET		/getLocalFiles					controllers.Application.getLocalFiles(folderName : String)
GET		/sitesDashboardStats			controllers.DataView.sitesDashboardStats()
GET		/salesforceDashboardStats		controllers.DataView.salesforceDashboardStats()

GET		/analysis/dashboard				controllers.Analysis.dashboard()
GET		/analysis/dashboardStats		controllers.DataView.analysisDashboardStats()
GET		/analysis/runAnalysisSet		controllers.Analysis.runAnalysisSet(analysisSetId : Long)
GET		/analysis/resetAnalysisSet		controllers.Analysis.resetAnalysisSet(analysisSetId : Long)

GET		/review/report					controllers.Review.report(reportId : Long)
GET		/review/salesforceSites			controllers.Review.salesforceSites()

POST	/review/submit/reportRow		controllers.ReviewSubmit.reportRow()

POST	/review/submit/manuallySeedSalesforceAccount		controllers.ReviewSubmit.manuallySeedSalesforceAccount()
POST	/review/submit/manuallyRedirectSalesforceAccount	controllers.ReviewSubmit.manuallyRedirectSalesforceAccount()
POST	/review/submit/approveResolved						controllers.ReviewSubmit.approveResolved()
POST	/review/submit/approveShared						controllers.ReviewSubmit.approveShared()
POST	/review/submit/markDefunct							controllers.ReviewSubmit.markDefunct()
POST	/review/submit/otherIssue							controllers.ReviewSubmit.otherIssue()
POST	/review/submit/recheck								controllers.ReviewSubmit.recheck()

GET		/markSignificantDifferences		controllers.DataEditor.markSignificantDifferences()


GET		/places/placesDashboard					controllers.PlacesController.placesDashboard()
GET		/places/placesDashboardStats			controllers.PlacesController.placesDashboardStats()
GET		/places/refreshZipcodeDatabase			controllers.PlacesController.refreshZipcodeDatabase()
GET		/places/importCanadaList				controllers.PlacesController.importCanadaList()
GET		/places/importUsList					controllers.PlacesController.importUsList()
GET		/places/fillBlankDetails				controllers.PlacesController.fillBlankDetails()
GET		/places/assignSiteless					controllers.PlacesController.assignSiteless()

GET		/sites/checkUnvalidated					controllers.SitesController.checkUnvalidated()
GET		/sites/validateAll						controllers.SitesController.validateAll()
GET		/sites/reviewSites						controllers.SitesController.reviewSites()
POST	/sites/validationSubmit					controllers.SitesController.validationSubmit()
POST	/sites/siteReviewSubmit					controllers.SitesController.siteReviewSubmit()


GET		/crawling/crawlingDashboard				controllers.CrawlingController.dashboard()



GET		/groupSites						controllers.Application.groupSites(numToProcess : Integer ?= 20, offset : Integer ?= 0)
GET		/runGc							controllers.Application.runGc()

GET		/viewEntity						controllers.DataView.viewEntity(entityClass : String, entityId : Long ?= 0)
GET		/dashboard						controllers.DataView.dashboard(message : String ?= "")
GET		/dashboardStats					controllers.DataView.dashboardStats()
GET		/reviewDupDomains				controllers.DataView.reviewDupDomains(numToProcess : Integer ?= 20, offset : Integer ?= 0)

GET		/monitoringQueues				controllers.DataView.getMonitoringQueues()


POST	/editEntity						controllers.DataEditor.editEntity()
GET		/mainUsableSpace				controllers.DataView.mainUsableSpace()
GET		/secondaryUsableSpace			controllers.DataView.secondaryUsableSpace()
GET 	/siteCrawl/:siteCrawlId			controllers.DataView.viewSiteCrawl(siteCrawlId : Long)

GET		/deDupHomepages					controllers.DataEditor.deDupHomepages()
GET		/removeExtraCrawls				controllers.DataEditor.removeExtraCrawls()
GET		/fillStandardizedFormat			controllers.DataEditor.fillStandardizedFormat()
GET		/fillPlacesDomain				controllers.DataEditor.fillPlacesDomain()


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)