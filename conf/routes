# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           	controllers.Application.index()
GET		/runExperiment					controllers.Application.runExperiment()
GET		/groupSites						controllers.Application.groupSites(numToProcess : Integer ?= 20, offset : Integer ?= 0)
GET		/runGc							controllers.Application.runGc()
GET		/duplicateDomains				controllers.Application.duplicateDomains(numToProcess : Integer ?= 20, offset : Integer ?= 0)
GET		/createTaskSetForm				controllers.Application.createTaskSetForm()

POST	/subtaskWorkStatus				controllers.TaskSetController.setSubtaskWorkStatus()

GET		/viewEntity						controllers.DataView.viewEntity(entityClass : String, entityId : Long ?= 0)
GET		/dashboard						controllers.DataView.dashboard(message : String ?= "")
GET		/dashboardStats					controllers.DataView.dashboardStats()
GET		/reviewDupDomains				controllers.DataView.reviewDupDomains(numToProcess : Integer ?= 20, offset : Integer ?= 0)
POST	/viewSiteList					controllers.DataView.viewSiteList()
GET		/taskSets						controllers.DataView.taskSets()
GET		/taskSet						controllers.DataView.taskSet(taskSetId : Long)

GET		/reviewTasks					controllers.DataView.reviewTasks(taskSetId : Long, count : Integer = 20, offset : Integer = 0, workType : String)
GET		/reviewSubtasks					controllers.DataView.reviewTasks(taskSetId : Long, count : Integer = 20, offset : Integer = 0, workType : String)


POST	/taskSetWork							controllers.JobController.taskSetWork()

GET		/monitoringQueues				controllers.DataView.getMonitoringQueues()



POST	/editEntity						controllers.DataEditor.editEntity()
GET		/mainUsableSpace				controllers.DataView.mainUsableSpace()
GET		/secondaryUsableSpace			controllers.DataView.secondaryUsableSpace()
GET 	/siteCrawl/:siteCrawlId			controllers.DataView.viewSiteCrawl(siteCrawlId : Long)

POST	/createTaskSet					controllers.DataEditor.createTaskSet()
GET		/deDupHomepages					controllers.DataEditor.deDupHomepages()
GET		/confirmHomepage				controllers.DataEditor.confirmHomepage(siteId : Long, action : String ?= "NO_ACTION")
GET		/setWebProvider					controllers.DataEditor.setWebProvider(siteCrawlId : Long, webProviderId : Integer)
GET		/makeSite						controllers.DataEditor.makeSite(url : String, dealerId : Long)
GET		/removeExtraCrawls				controllers.DataEditor.removeExtraCrawls()
GET		/fillStandardizedFormat			controllers.DataEditor.fillStandardizedFormat()
GET		/fillPlacesDomain				controllers.DataEditor.fillPlacesDomain()
GET		/combineOnDomain				controllers.DataEditor.combineOnDomain(siteId : Long)

GET		/addGroupUrl					controllers.DataEditor.addGroupUrl(siteId : Long, url : String)

POST	/setHomepage					controllers.DataEditor.setHomepage()
POST 	/acceptSuggested				controllers.DataEditor.acceptSuggested()
POST 	/ignoreSuggested				controllers.DataEditor.ignoreSuggested()
POST	/redoUrlCheck					controllers.DataEditor.redoUrlCheck()
POST	/markMaybeDefunct				controllers.DataEditor.markMaybeDefunct()
POST	/reviewLater					controllers.DataEditor.reviewLater()
POST	/approveSmallCrawl				controllers.DataEditor.approveSmallCrawl()
POST	/markGroupSite					controllers.DataEditor.markGroupSite()
POST	/markCrawlProtected				controllers.DataEditor.markCrawlProtected()
POST	/markRecrawl					controllers.DataEditor.markRecrawl()
POST	/editFetchJobOptions			controllers.DataEditor.editFetchJobOptions()

POST	/submitTaskReview				controllers.TaskSetController.submitTaskReview()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)